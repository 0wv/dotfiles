# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt

snippet Evalblock "Evalblock" b
**In [${1:foo}]:**

<!-- require: ${2:sympy} target: $1 -->
\`\`\`${3:python}
${4:print('hello, world')}
\`\`\`

**Out [$1]:**

<!-- name: $1 -->
\`\`\`${5:katex}
\`\`\`$0
endsnippet

snippet block "block"
<span style="display: block; padding: 1em; width: max-content;">
$1
</span>$0
endsnippet

snippet evalblock "evalblock" b
**In [${1:foo}]:**

<!-- target: $1 -->
\`\`\`${2:python}
${3:print('hello, world')}
\`\`\`

**Out [$1]:**

<!-- name: $1 -->
\`\`\`${4:text}
\`\`\`$0
endsnippet

snippet evalblk "evalblk" b
<!-- name: ${1:sympy} -->
\`\`\`${2:python}
${3:from sympy import *}

# Aliases
Frac = Rational
summ = summation

# Define A-z variables (without E, I, N)
#var('A, B, C, D, F, G, H, J, K, L, M, O, P, Q, R, S, T, U, V, W, X, Y, Z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z')
\`\`\`$0
endsnippet

snippet math "math"
<span class="inlkatex">$1</span>$0
endsnippet
